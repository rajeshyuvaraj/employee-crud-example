[{"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\index.js":"1","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\reportWebVitals.js":"2","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\App.js":"3","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\EmployeeDataTable.js":"4","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\EditEmployee.js":"5","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\AddEmployee.js":"6","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\index.js":"7","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\App.js":"8","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\reportWebVitals.js":"9","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\EmployeeDataTable.js":"10","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\EditEmployee.js":"11","C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\AddEmployee.js":"12"},{"size":617,"mtime":1675856518000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1675856518000,"results":"15","hashOfConfig":"14"},{"size":886,"mtime":1710044848493,"results":"16","hashOfConfig":"14"},{"size":4816,"mtime":1710038084388,"results":"17","hashOfConfig":"14"},{"size":5717,"mtime":1710044155615,"results":"18","hashOfConfig":"14"},{"size":5043,"mtime":1710036607617,"results":"19","hashOfConfig":"14"},{"size":617,"mtime":1675856518000,"results":"20","hashOfConfig":"21"},{"size":886,"mtime":1710044848493,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1675856518000,"results":"23","hashOfConfig":"21"},{"size":4816,"mtime":1710038084388,"results":"24","hashOfConfig":"21"},{"size":5717,"mtime":1710044155615,"results":"25","hashOfConfig":"21"},{"size":5129,"mtime":1710202524345,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15wtemt",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xfaqtd",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\index.js",[],[],"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\reportWebVitals.js",[],[],"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\App.js",[],[],"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\EmployeeDataTable.js",[],[],"C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\EditEmployee.js",["64"],[],"import React, {useEffect, useState} from 'react';\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {Form, Button, Container, Alert} from 'react-bootstrap';\n\nconst EmployeeForm = () => {\n\n    const editURL = \"http://localhost:8080/emp/\";\n    const navigate = useNavigate();\n    const param = useParams();\n    const [empId, setEmpId] = useState('');\n    const [enteredfName, setfName] = useState('');\n    const [enteredlName, setlName] = useState('');\n    const [enteredEmail, setEmail] = useState('');\n    const [enteredStatus, setlsStatus] = useState('');\n    const [enteredPhoneNumber, setPhoneNumber] = useState('');\n    const [enteredDob, setDob] = useState('');\n    const [enteredAddress, setAddress] = useState('');\n\n    useEffect(() => {\n\n        axios.get(editURL + param.id).then((response) => {\n            const empData = response.data;\n            setEmpId(empData.id);\n            setfName(empData.fName);\n            setlName(empData.lName);\n            setEmail(empData.email);\n            setlsStatus(empData.status);\n            setPhoneNumber(empData.phoneNumber);\n            setDob(empData.dob);\n            setAddress(empData.address);\n\n        }).catch(error => {\n            alert(\"Error Ocurred getting employee detail:\" + error);\n        });\n    }, []);\n\n\n    const fNameChangeHandler = (event) => {\n        setfName(event.target.value);\n    };\n    const lNameChangeHandler = (event) => {\n        setlName(event.target.value);\n    };\n    const emailChangeHandler = (event) => {\n        setEmail(event.target.value);\n    };\n\n    const statusChangeHandler = (event) => {\n        setlsStatus(event.target.value);\n    };\n\n    const phoneNumberChangeHandler = (event) => {\n        setPhoneNumber(event.target.value);\n    };\n\n    const dobChangeHandler = (event) => {\n        setDob(event.target.value);\n    };\n    const addressChangeHandler = (event) => {\n        setAddress(event.target.value);\n    };\n\n\n    const submitActionHandler = (event) => {\n        event.preventDefault();\n        axios\n            .put(editURL + param.id, {\n                id: empId,\n                fName: enteredfName,\n                lName: enteredlName,\n                email: enteredEmail,\n                status: enteredStatus,\n                phoneNumber: enteredPhoneNumber,\n                dob: enteredDob,\n                address: enteredAddress\n            })\n            .then((response) => {\n                alert(\"Employee \" + empId + \" updated!\");\n                navigate('/read')\n\n            }).catch(error => {\n            alert(\"Error Ocurred updating employee:\" + error);\n        });\n\n    };\n\n    return (\n        <Alert variant='primary'>\n            <Container>\n                <Form onSubmit={submitActionHandler} id=\"data\">\n                    <Form.Group controlId=\"form.id\">\n                        <Form.Label>Id</Form.Label>\n                        <Form.Control value={empId} readonly='readonly'/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.fName\">\n                        <Form.Label>User First Name</Form.Label>\n                        <Form.Control type=\"text\" value={enteredfName} onChange={fNameChangeHandler}\n                                      placeholder=\"Enter User First Name\" required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.lName\">\n                        <Form.Label>User Last Name</Form.Label>\n                        <Form.Control type=\"text\" value={enteredlName} onChange={lNameChangeHandler}\n                                      placeholder=\"Enter User Last Name\" required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.email\">\n                        <Form.Label>User Email</Form.Label>\n                        <Form.Control type=\"text\" value={enteredEmail} onChange={emailChangeHandler}\n                                      placeholder=\"Enter User Email\" required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.status\">\n                        <Form.Label>User Status</Form.Label>\n                        <Form.Control type=\"text\" value={enteredStatus} onChange={statusChangeHandler}\n                                      placeholder=\"Enter User Status\" required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.phoneNumber\">\n                        <Form.Label>User Phone Number</Form.Label>\n                        <Form.Control type=\"text\" value={enteredPhoneNumber} onChange={phoneNumberChangeHandler}\n                                      placeholder=\"Enter User Phone Number\" required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.dob\">\n                        <Form.Label>User Date of Birth</Form.Label>\n                        <Form.Control type=\"text\" value={enteredDob} onChange={dobChangeHandler}\n                                      placeholder=\"Enter User Date of Birth\"/>\n                    </Form.Group>\n                    <Form.Group controlId=\"form.address\">\n                        <Form.Label>User Address</Form.Label>\n                        <Form.Control type=\"text\" value={enteredAddress} onChange={addressChangeHandler}\n                                      placeholder=\"Enter User Address\" required/>\n                    </Form.Group>\n                    <br></br>\n                    <Button type='submit'>Update Employee</Button>\n                    &nbsp;&nbsp;&nbsp;\n                    <Button type='submit' onClick={() => navigate(\"/read\")}>Cancel</Button>\n                </Form>\n            </Container>\n        </Alert>\n\n    );\n}\nexport default EmployeeForm;\n","C:\\Users\\paul\\Downloads\\react-crud-example-master\\react-crud-example-master\\src\\components\\AddEmployee.js",[],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\index.js",[],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\App.js",[],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\reportWebVitals.js",[],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\EmployeeDataTable.js",[],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\EditEmployee.js",["65"],[],"C:\\Users\\paul\\OneDrive\\Desktop\\employee-crud-example\\src\\components\\AddEmployee.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":36,"column":8,"nodeType":"68","endLine":36,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":36,"column":8,"nodeType":"68","endLine":36,"endColumn":10,"suggestions":"70"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.","ArrayExpression",["71"],["72"],{"desc":"73","fix":"74"},{"desc":"73","fix":"75"},"Update the dependencies array to be: [param.id]",{"range":"76","text":"77"},{"range":"78","text":"77"},[1315,1317],"[param.id]",[1315,1317]]